load("@bazel_skylib//lib:dicts.bzl", "dicts")
load("//tools:integration.bzl", "CLI_PROJECT_MAPPINGS")
load("//tools:defaults.bzl", "node_integration_test")

npmPackageMappings = dicts.add(
    CLI_PROJECT_MAPPINGS,
    {
        "//src/cdk:npm_package_archive": "@angular/cdk",
        "//src/material:npm_package_archive": "@angular/material",
    },
)

node_integration_test(
    name = "test",
    srcs = glob(["**/*"]),
    commands = [
        # Note: We use a cache folder within the integration test as otherwise
        # the NPM package mapped archive would be cached in the system.
        # See: https://github.com/yarnpkg/yarn/issues/2165.
        # TODO(devversion): determine if a solution/workaround could live in the test runner.
        "yarn install --cache-folder .yarn_cache_folder/",
        "yarn test",
    ],
    npm_packages = npmPackageMappings,
    tags = [
        # Chromium cannot run in Sandbox. For this test, sandbox is disabled.
        # Additionally, we need to disable RBE as this test relies on internet
        # access for installing the NPM packages.
        "no-sandbox",
        "no-remote-exec",
    ],
)

node_integration_test(
    name = "test_node12",
    srcs = glob(["**/*"]),
    commands = [
        # Note: We use a cache folder within the integration test as otherwise
        # the NPM package mapped archive would be cached in the system.
        # See: https://github.com/yarnpkg/yarn/issues/2165.
        # TODO(devversion): determine if a solution/workaround could live in the test runner.
        "yarn install --cache-folder .yarn_cache_folder/",
        "yarn test",
    ],
    npm_packages = npmPackageMappings,
    tags = [
        # Chromium cannot run in Sandbox. For this test, sandbox is disabled.
        # Additionally, we need to disable RBE as this test relies on internet
        # access for installing the NPM packages.
        "no-sandbox",
        "no-remote-exec",
    ],
    tool_mappings = {
        "@node12_host//:yarn_bin": "yarn",
        "@node12_host//:node_bin": "node",
    },
)
