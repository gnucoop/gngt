load("@npm//@bazel/rollup:index.bzl", "rollup_bundle")
load("@npm//@bazel/concatjs:index.bzl", "concatjs_devserver")
load("//:packages.bzl", "getAngularUmdTargets")
load("//tools:defaults.bzl", "ng_module")

package(default_visibility = ["//visibility:public"])

# List of dependencies that are referenced in the `index.html` file.
devserverIndexHtmlDependencies = [
    "@npm//zone.js",
    "@npm//core-js-bundle",
    "@npm//@angular/material",
    "@npm//@ionic/angular",
    ":index.html",
]

exports_files([
    "devserver-configure.js",
    "protractor.conf.js",
    "start-devserver.js",
])

ng_module(
    name = "e2e-app",
    testonly = True,
    srcs = glob(
        ["**/*.ts"],
        exclude = ["test-util/**"],
    ),
    assets = glob(
        [
            "**/*.html",
            "**/*.css",
        ],
        exclude = ["index.html"],
    ),
    deps = [
        "//src/gngt-examples/private",
        "//src/ionic/calendar",
        "//src/material/calendar",
        "@npm//@angular/common",
        "@npm//@angular/core",
        "@npm//@angular/forms",
        "@npm//@angular/platform-browser",
        "@npm//@angular/router",
        "@npm//@ionic/angular",
        "@npm//@ngx-translate/core",
        "@npm//@ngx-translate/http-loader",
    ],
)

concatjs_devserver(
    name = "devserver",
    testonly = True,
    additional_root_paths = [
        "npm/node_modules",
    ],
    entry_module = "gc_gngt/src/e2e-app/main",
    port = 4200,
    # Scripts which will be included in the serving_path bundle after RequireJS has been loaded.
    scripts = [
        ":devserver-configure.js",
        "//tools/rxjs:rxjs_umd_modules",
        "@npm//:node_modules/tslib/tslib.js",
    ] + getAngularUmdTargets(),
    # Name of the generated `concatjs` bundle that is built based on the labels in `deps` and `scripts`.
    serving_path = "/bundle.js",
    static_files = devserverIndexHtmlDependencies,
    tags = ["manual"],
    deps = [":e2e-app"],
)

# Bundles the `e2e-app` using rollup while running the Angular linker to transform
# partial declarations to their corresponding Angular definitions. This target should
# only be run if the e2e-app is built in partial compilation mode. Technically this
# target could be run with full compilation mode too, but we want to raise an error if
# the partial compilation is not enabled (as the mode has been forgotten most likely).
rollup_bundle(
    name = "linked_app_bundle",
    testonly = True,
    config_file = ":rollup-with-linker.config.js",
    entry_points = {
        "main.ts": "bundle",
    },
    sourcemap = "false",
    tags = ["manual"],
    deps = select(
        {
            # We rely on the partial compilation build setting here to ensure that the target
            # cannot be built if partial compilation is not enabled.
            "//tools:partial_compilation_enabled": [
                ":e2e-app",
                "@npm//rollup-plugin-node-resolve",
                "@npm//@angular/compiler-cli",
                "@npm//@rollup/plugin-babel",
                "@npm//@rollup/plugin-commonjs",
                "@npm//glob",
            ],
        },
        no_match_error = "Partial compilation needs to be enabled. The following flag enables partial " +
                         "compilation: --//tools:partial_compilation=True",
    ),
)

# Basic web server that serves the e2e-app processed by the Angular linker.
concatjs_devserver(
    name = "devserver_with_linked_declarations",
    testonly = True,
    additional_root_paths = ["npm/node_modules"],
    port = 4200,
    static_files = [":linked_app_bundle"] + devserverIndexHtmlDependencies,
    tags = ["manual"],
)
